/** ------------------------------------------------------------------------------
  * Estructuras de Datos. 2¬∫ Curso. ETSI Inform√°tica. UMA
  *
  * Control del d√≠a 4-9-2013
  * 
  * Di√°metro de un grafo conexo 
  *
  * (completa y sustituye los siguientes datos)
  * Titulaci√≥n: Grado en Ingenier√≠a ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ [Inform√°tica | del Software | de Computadores].
  *
  * Alumno: APELLIDOS, NOMBRE
  *
  * -------------------------------------------------------------------------------
  */

import dataStructures.graph.BreadthFirstTraversal;
import dataStructures.graph.Graph;

public class GraphUtil {

	/**
	 * LENGTH: Calcula el n√∫mero de elementos que contiene un iterable
	 * 
	 * @param it  El iterador
	 * @return   N√∫mero de elementos en el iterador
	 */
	public static <T> int length(Iterable<T> it) {
		// TO DO
	    int l=0;

		for(T elem: it){
			l++;
		}
		return l;
	}

	/**
	 * ECCENTRICITY: Calcula la excentricidad de un v√©rtice en un grafo El algoritmo toma la
	 * longitud del camino m√°ximo en un recorrido en profundidad del grafo
	 * comenzando en el v√©rtice dado.
	 * 
	 * @param graph    Grafo
	 * @param v        V√©rtice del grafo
	 * @return         Excentricidad del v√©rtice
	 */
	public static <T> int eccentricity(Graph<T> graph, T v) {
		// TO DO
	    BreadthFirstTraversal<T> paths = new BreadthFirstTraversal<>(graph, v);

		int maxDistance = 0;

		for(Iterable<T> it: paths.paths()){
			int currentDist = length(it);
			if(currentDist > maxDistance){
				maxDistance = currentDist;//üòäüòä
			}
		}
		return maxDistance-1;
	}

	/**
	 * DIAMETER: Se define como la m√°xima excentricidad de los v√©rtices del grafo.
	 * 
	 * @param graph
	 * @return
	 */

	public static <T> int diameter(Graph<T> graph) {
		// TO DO
		int maxEccentricity = 0;

		for(T v: graph.vertices()){
			int currentEcccentricity = eccentricity(graph, v);
			if(currentEcccentricity > maxEccentricity) {
				maxEccentricity = currentEcccentricity;
			}
		}
		return maxEccentricity;
	}
	
	/** 
	 * Estima y justifica la complejidad del m√©todo diameter
	 */
}
